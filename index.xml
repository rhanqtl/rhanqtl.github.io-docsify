<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rhanqtl</title><link>https://rhanqtl.github.io/</link><description>Recent content on rhanqtl</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 13 Mar 2023 10:25:27 +0800</lastBuildDate><atom:link href="https://rhanqtl.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>构造 SSA 形式</title><link>https://rhanqtl.github.io/posts/compilers/ssa-construction/</link><pubDate>Mon, 13 Mar 2023 10:25:27 +0800</pubDate><guid>https://rhanqtl.github.io/posts/compilers/ssa-construction/</guid><description>&lt;div class="paragraph">
&lt;p>\-&lt;/p>
&lt;/div></description></item><item><title>设计模式 | Visitor</title><link>https://rhanqtl.github.io/posts/design-patterns/visitor/</link><pubDate>Fri, 13 Jan 2023 15:09:31 +0800</pubDate><guid>https://rhanqtl.github.io/posts/design-patterns/visitor/</guid><description>-</description></item><item><title>如何从浏览器启动应用程序</title><link>https://rhanqtl.github.io/posts/how-to-launch-apps-from-web-browsers/</link><pubDate>Fri, 30 Dec 2022 21:50:11 +0800</pubDate><guid>https://rhanqtl.github.io/posts/how-to-launch-apps-from-web-browsers/</guid><description>-</description></item><item><title>LeetCode 640. 求解方程</title><link>https://rhanqtl.github.io/posts/leetcode-640/</link><pubDate>Sat, 20 Aug 2022 11:40:17 +0800</pubDate><guid>https://rhanqtl.github.io/posts/leetcode-640/</guid><description>-</description></item><item><title>[译] Rob Pike: Notes on Programming in C</title><link>https://rhanqtl.github.io/translations/rob-pike-notes-on-programming-in-c/</link><pubDate>Sun, 14 Aug 2022 16:25:08 +0800</pubDate><guid>https://rhanqtl.github.io/translations/rob-pike-notes-on-programming-in-c/</guid><description>-</description></item><item><title>v2ray-core 源码中的大卫像</title><link>https://rhanqtl.github.io/posts/david-in-v2ray-core-source-code/</link><pubDate>Wed, 27 Jul 2022 17:27:47 +0800</pubDate><guid>https://rhanqtl.github.io/posts/david-in-v2ray-core-source-code/</guid><description>为了理解 V2Ray 的 GeoIP 机制，我读了 v2ray-core 的部分源码，发现了这个彩蛋</description></item><item><title>辛弃疾 | 青玉案·元夕</title><link>https://rhanqtl.github.io/poems/xin-qi-ji-qing-yu-an-yuan-xi/</link><pubDate>Sat, 02 May 2020 18:02:13 +0800</pubDate><guid>https://rhanqtl.github.io/poems/xin-qi-ji-qing-yu-an-yuan-xi/</guid><description>~</description></item><item><title>李白 | 侠客行</title><link>https://rhanqtl.github.io/poems/li-bai-xia-ke-xing/</link><pubDate>Thu, 18 Jul 2019 19:48:10 +0800</pubDate><guid>https://rhanqtl.github.io/poems/li-bai-xia-ke-xing/</guid><description>~</description></item><item><title>李白 | 短歌行</title><link>https://rhanqtl.github.io/poems/li-bai-duan-ge-xing/</link><pubDate>Thu, 18 Jul 2019 18:42:51 +0800</pubDate><guid>https://rhanqtl.github.io/poems/li-bai-duan-ge-xing/</guid><description>~</description></item><item><title>个人简历</title><link>https://rhanqtl.github.io/about/</link><pubDate>Sun, 14 Apr 2019 02:15:06 +0800</pubDate><guid>https://rhanqtl.github.io/about/</guid><description>基本信息 性别：男
邮箱：my@rhanqtl.com
教育经历 硕士：南京大学软件学院（2020.09 — 2022.06）
本科：南京大学软件学院（2016.09 — 2020.07）
工作经历 正式员工
腾讯（2022.08 — 2022.12）
实习
星环信息科技（2021.10 — 2022.04）
字节跳动（2021.05 — 2021.08）
星环信息科技（2020.07 — 2020.08）
兴趣点 学习各种范式的编程语言，（尝试）学过的包括 Go、Java、C++、Python、Scala、Rust、Ruby、Haskell、SML、Racket、Scheme、Perl、Erlang、TypeScript、C#、Brainfuck …​
程序设计语言及其实现
正在学习 C++
[20%] System Programming in C++ 涉及现代 C++，不过可惜的是访问不到 PA 和项目
[DONE] Programming: Principles and Practice Using C++ by Bjarne Stroustrup
[TODO] Effective C++ by Scott Meyers
[TODO] Inside the C++ Object Model by Stanley B. Lippman
[TODO] The C++ Programming Language by Bjarne Stroustrup</description></item><item><title/><link>https://rhanqtl.github.io/posts/compilers/opt/pointer-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rhanqtl.github.io/posts/compilers/opt/pointer-analysis/</guid><description>动机 #include &amp;lt;stdbool.h&amp;gt; bool foo(char *p, char *q) { *p = &amp;#39;a&amp;#39;; *q = &amp;#39;b&amp;#39;; return *p == &amp;#39;a&amp;#39;; } 如果使用 -O2，输出为：
movb $97, (%rdi) movb $98, (%rsi) cmp $97, (%rdi) sete %al ret Note C 中有一个 restrict 关键字，可以用来向编译器“承诺”指针不重叠或者不互为 alias，使用该关键字修改 foo 的两个参数，会得到 movb $97, (%rdi) movl $1, %eax movb $98, (%rsi) ret 算法 domain - ${ x → possible pointed-to locations }$
为什么需要</description></item></channel></rss>